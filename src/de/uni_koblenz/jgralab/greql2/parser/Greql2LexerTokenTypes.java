// $ANTLR 2.7.6 (2005-12-22): "greql2lexer.g" -> "Greql2Lexer.java"$

package de.uni_koblenz.jgralab.greql2.parser;
 
import de.uni_koblenz.jgralab.greql2.funlib.Greql2FunctionLibrary;

public interface Greql2LexerTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int NUM_REAL = 4;
	int DOTDOT = 5;
	int DOT = 6;
	int FUNCTIONID = 7;
	int THIS = 8;
	int AND = 9;
	int ANDTHEN = 10;
	int FALSE = 11;
	int NOT = 12;
	int NULL_VALUE = 13;
	int OR = 14;
	int ORELSE = 15;
	int TRUE = 16;
	int XOR = 17;
	int AS = 18;
	int BAG = 19;
	int E = 20;
	int ESUBGRAPH = 21;
	int EXISTS_ONE = 22;
	int EXISTS = 23;
	int END = 24;
	int FORALL = 25;
	int FROM = 26;
	int IN = 27;
	int LET = 28;
	int LIST = 29;
	int PATH = 30;
	int PATHSYSTEM = 31;
	int REC = 32;
	int REPORT = 33;
	int REPORTSET = 34;
	int REPORTBAG = 35;
	int REPORTTABLE = 36;
	int STORE = 37;
	int SET = 38;
	int T = 39;
	int TUP = 40;
	int USING = 41;
	int V = 42;
	int VSUBGRAPH = 43;
	int WHERE = 44;
	int WITH = 45;
	int QUESTION = 46;
	int EXCL = 47;
	int COLON = 48;
	int COMMA = 49;
	int AT = 50;
	int LPAREN = 51;
	int RPAREN = 52;
	int LBRACK = 53;
	int RBRACK = 54;
	int LCURLY = 55;
	int RCURLY = 56;
	int ASSIGN = 57;
	int GASSIGN = 58;
	int EQUAL = 59;
	int MATCH = 60;
	int NOT_EQUAL = 61;
	int LE = 62;
	int GE = 63;
	int L_T = 64;
	int G_T = 65;
	int DIV = 66;
	int PLUS = 67;
	int MINUS = 68;
	int STAR = 69;
	int MOD = 70;
	int SEMI = 71;
	int CARET = 72;
	int BOR = 73;
	int AMP = 74;
	int SMILEY = 75;
	int EDGESTART = 76;
	int EDGEEND = 77;
	int EDGE = 78;
	int RARROW = 79;
	int LARROW = 80;
	int ARROW = 81;
	int HASH = 82;
	int WS = 83;
	int SL_COMMENT = 84;
	int ML_COMMENT = 85;
	int STRING_LITERAL = 86;
	int ESC = 87;
	int IDENT = 88;
	int HEX_DIGIT = 89;
	int DIGIT = 90;
	int NONZERO_DIGIT = 91;
	int OCT_DIGIT = 92;
	int NUM_INT = 93;
	int EXPONENT = 94;
}
