/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema;

import de.uni_koblenz.jgralab.Aggregation;
import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralab.greql2.schema.impl.IsDirectionOfImpl;
/**
FromVertexClass: Direction
FromRoleName : 
ToVertexClass: PrimaryPathDescription
toRoleName : 
 */

public interface IsDirectionOf extends Aggregation, Greql2Aggregation {

	/**
	 * refers to the default implementation class of this interface
	 */
	public static final Class<IsDirectionOfImpl> IMPLEMENTATION_CLASS = IsDirectionOfImpl.class;

	/**
	 * @return the next Greql2Aggregation edge in the global edge sequence
	 */
	public Greql2Aggregation getNextGreql2AggregationInGraph();

	/**
	 * @return the next IsDirectionOf edge in the global edge sequence
	 */
	public IsDirectionOf getNextIsDirectionOfInGraph();

	/**
	 * @return the next IsDirectionOf edge in the global edge sequence
	 * @param noSubClasses if set to <code>true</code>, no subclasses of IsDirectionOf are accepted
	 */
	public IsDirectionOf getNextIsDirectionOfInGraph(boolean noSubClasses);

	/**
	 * @return the next edge of class Greql2Aggregation at the "this" vertex
	 */
	public Greql2Aggregation getNextGreql2Aggregation();

	/**
	 * @return the next edge of class Greql2Aggregation at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public Greql2Aggregation getNextGreql2Aggregation(EdgeDirection orientation);

	/**
	 * @return the next edge of class IsDirectionOf at the "this" vertex
	 */
	public IsDirectionOf getNextIsDirectionOf();

	/**
	 * @return the next edge of class IsDirectionOf at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public IsDirectionOf getNextIsDirectionOf(EdgeDirection orientation);

	/**
	 * @return the next edge of class IsDirectionOf at the "this" vertex
	 * @param noSubClasses if set to <code>true</code>, no subclasses of IsDirectionOf are accepted
	 */
	public IsDirectionOf getNextIsDirectionOf(boolean noSubClasses);

	/**
	 * @return the next edge of class IsDirectionOf at the "this" vertex
	 * @param orientation the orientation of the edge
	 * @param noSubClasses if set to <code>true</code>, no subclasses of IsDirectionOf are accepted
	 */
	public IsDirectionOf getNextIsDirectionOf(EdgeDirection orientation, boolean noSubClasses);

}
