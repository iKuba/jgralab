/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema.impl;

import de.uni_koblenz.jgralab.impl.GraphFactoryImpl;

import de.uni_koblenz.jgralab.greql2.schema.*;

public class Greql2SchemaFactory extends GraphFactoryImpl {

	public Greql2SchemaFactory() {
		super();
		fillTable();
	}

	protected void fillTable() { 

		/* code for graph Greql2 */
		setGraphImplementationClass(Greql2.class, Greql2Impl.class);

		setVertexImplementationClass(EdgePathDescription.class, EdgePathDescriptionImpl.class);

		setVertexImplementationClass(BagConstruction.class, BagConstructionImpl.class);

		setVertexImplementationClass(NullLiteral.class, NullLiteralImpl.class);

		setVertexImplementationClass(RestrictedExpression.class, RestrictedExpressionImpl.class);

		setVertexImplementationClass(EdgeRestriction.class, EdgeRestrictionImpl.class);

		setVertexImplementationClass(FunctionId.class, FunctionIdImpl.class);

		setVertexImplementationClass(IntermediateVertexPathDescription.class, IntermediateVertexPathDescriptionImpl.class);

		setVertexImplementationClass(TypeId.class, TypeIdImpl.class);

		setVertexImplementationClass(TableComprehension.class, TableComprehensionImpl.class);

		setVertexImplementationClass(EdgeSetExpression.class, EdgeSetExpressionImpl.class);

		setVertexImplementationClass(RecordConstruction.class, RecordConstructionImpl.class);

		setVertexImplementationClass(Greql2Expression.class, Greql2ExpressionImpl.class);

		setVertexImplementationClass(FunctionApplication.class, FunctionApplicationImpl.class);

		setVertexImplementationClass(Identifier.class, IdentifierImpl.class);

		setVertexImplementationClass(AttributeId.class, AttributeIdImpl.class);

		setVertexImplementationClass(ListConstruction.class, ListConstructionImpl.class);

		setVertexImplementationClass(LetExpression.class, LetExpressionImpl.class);

		setVertexImplementationClass(Variable.class, VariableImpl.class);

		setVertexImplementationClass(TransposedPathDescription.class, TransposedPathDescriptionImpl.class);

		setVertexImplementationClass(Literal.class, LiteralImpl.class);

		setVertexImplementationClass(RecordId.class, RecordIdImpl.class);

		setVertexImplementationClass(ForwardVertexSet.class, ForwardVertexSetImpl.class);

		setVertexImplementationClass(Declaration.class, DeclarationImpl.class);

		setVertexImplementationClass(CfGrammar.class, CfGrammarImpl.class);

		setVertexImplementationClass(RoleId.class, RoleIdImpl.class);

		setVertexImplementationClass(SetComprehension.class, SetComprehensionImpl.class);

		setVertexImplementationClass(ListRangeConstruction.class, ListRangeConstructionImpl.class);

		setVertexImplementationClass(PathConstruction.class, PathConstructionImpl.class);

		setVertexImplementationClass(BagComprehension.class, BagComprehensionImpl.class);

		setVertexImplementationClass(Symbol.class, SymbolImpl.class);

		setVertexImplementationClass(VertexSetExpression.class, VertexSetExpressionImpl.class);

		setVertexImplementationClass(VertexSubgraphExpression.class, VertexSubgraphExpressionImpl.class);

		setVertexImplementationClass(ExponentiatedPathDescription.class, ExponentiatedPathDescriptionImpl.class);

		setVertexImplementationClass(RecordElement.class, RecordElementImpl.class);

		setVertexImplementationClass(IteratedPathDescription.class, IteratedPathDescriptionImpl.class);

		setVertexImplementationClass(SimpleDeclaration.class, SimpleDeclarationImpl.class);

		setVertexImplementationClass(EdgeVertexList.class, EdgeVertexListImpl.class);

		setVertexImplementationClass(SimplePathDescription.class, SimplePathDescriptionImpl.class);

		setVertexImplementationClass(SequentialPathDescription.class, SequentialPathDescriptionImpl.class);

		setVertexImplementationClass(IntLiteral.class, IntLiteralImpl.class);

		setVertexImplementationClass(BackwardVertexSet.class, BackwardVertexSetImpl.class);

		setVertexImplementationClass(ConditionalExpression.class, ConditionalExpressionImpl.class);

		setVertexImplementationClass(AlternativePathDescription.class, AlternativePathDescriptionImpl.class);

		setVertexImplementationClass(Direction.class, DirectionImpl.class);

		setVertexImplementationClass(RightSide.class, RightSideImpl.class);

		setVertexImplementationClass(PathExistence.class, PathExistenceImpl.class);

		setVertexImplementationClass(BoolLiteral.class, BoolLiteralImpl.class);

		setVertexImplementationClass(Nonterminal.class, NonterminalImpl.class);

		setVertexImplementationClass(RealLiteral.class, RealLiteralImpl.class);

		setVertexImplementationClass(WhereExpression.class, WhereExpressionImpl.class);

		setVertexImplementationClass(Quantifier.class, QuantifierImpl.class);

		setVertexImplementationClass(OptionalPathDescription.class, OptionalPathDescriptionImpl.class);

		setVertexImplementationClass(SetConstruction.class, SetConstructionImpl.class);

		setVertexImplementationClass(StringLiteral.class, StringLiteralImpl.class);

		setVertexImplementationClass(TupleConstruction.class, TupleConstructionImpl.class);

		setVertexImplementationClass(PathSystemConstruction.class, PathSystemConstructionImpl.class);

		setVertexImplementationClass(QuantifiedExpression.class, QuantifiedExpressionImpl.class);

		setVertexImplementationClass(EdgeSubgraphExpression.class, EdgeSubgraphExpressionImpl.class);

		setVertexImplementationClass(Production.class, ProductionImpl.class);

		setVertexImplementationClass(ThisLiteral.class, ThisLiteralImpl.class);

		setVertexImplementationClass(Definition.class, DefinitionImpl.class);

		setEdgeImplementationClass(IsTableHeaderOf.class, IsTableHeaderOfImpl.class);

		setEdgeImplementationClass(IsStartExprOf.class, IsStartExprOfImpl.class);

		setEdgeImplementationClass(IsVarOf.class, IsVarOfImpl.class);

		setEdgeImplementationClass(IsLeftSideOf.class, IsLeftSideOfImpl.class);

		setEdgeImplementationClass(IsQuantifierOf.class, IsQuantifierOfImpl.class);

		setEdgeImplementationClass(IsRightSideOf.class, IsRightSideOfImpl.class);

		setEdgeImplementationClass(IsIteratedPathOf.class, IsIteratedPathOfImpl.class);

		setEdgeImplementationClass(IsTransposedPathOf.class, IsTransposedPathOfImpl.class);

		setEdgeImplementationClass(IsSubgraphOf.class, IsSubgraphOfImpl.class);

		setEdgeImplementationClass(IsNullExprOf.class, IsNullExprOfImpl.class);

		setEdgeImplementationClass(IsEdgeExprOf.class, IsEdgeExprOfImpl.class);

		setEdgeImplementationClass(IsDefinitionOf.class, IsDefinitionOfImpl.class);

		setEdgeImplementationClass(IsExprOf.class, IsExprOfImpl.class);

		setEdgeImplementationClass(IsBoundVarOf.class, IsBoundVarOfImpl.class);

		setEdgeImplementationClass(IsProductionOf.class, IsProductionOfImpl.class);

		setEdgeImplementationClass(IsSubPathOf.class, IsSubPathOfImpl.class);

		setEdgeImplementationClass(IsCompResultDefOf.class, IsCompResultDefOfImpl.class);

		setEdgeImplementationClass(IsIdOf.class, IsIdOfImpl.class);

		setEdgeImplementationClass(IsRecordElementOf.class, IsRecordElementOfImpl.class);

		setEdgeImplementationClass(IsGoalRestrOf.class, IsGoalRestrOfImpl.class);

		setEdgeImplementationClass(IsRecordExprOf.class, IsRecordExprOfImpl.class);

		setEdgeImplementationClass(IsSymbolOf.class, IsSymbolOfImpl.class);

		setEdgeImplementationClass(IsFunctionIdOf.class, IsFunctionIdOfImpl.class);

		setEdgeImplementationClass(IsTypeIdOf.class, IsTypeIdOfImpl.class);

		setEdgeImplementationClass(IsEdgeRestrOf.class, IsEdgeRestrOfImpl.class);

		setEdgeImplementationClass(IsAlternativePathOf.class, IsAlternativePathOfImpl.class);

		setEdgeImplementationClass(IsIntermediateVertexOf.class, IsIntermediateVertexOfImpl.class);

		setEdgeImplementationClass(IsBoundExprOfDefinition.class, IsBoundExprOfDefinitionImpl.class);

		setEdgeImplementationClass(IsCompDeclOf.class, IsCompDeclOfImpl.class);

		setEdgeImplementationClass(IsFirstValueOf.class, IsFirstValueOfImpl.class);

		setEdgeImplementationClass(IsTargetExprOf.class, IsTargetExprOfImpl.class);

		setEdgeImplementationClass(IsRoleIdOf.class, IsRoleIdOfImpl.class);

		setEdgeImplementationClass(IsPathOf.class, IsPathOfImpl.class);

		setEdgeImplementationClass(IsElementOf.class, IsElementOfImpl.class);

		setEdgeImplementationClass(IsRecordIdOf.class, IsRecordIdOfImpl.class);

		setEdgeImplementationClass(IsStartRestrOf.class, IsStartRestrOfImpl.class);

		setEdgeImplementationClass(IsTypeExprOfFunction.class, IsTypeExprOfFunctionImpl.class);

		setEdgeImplementationClass(IsRowHeaderExprOf.class, IsRowHeaderExprOfImpl.class);

		setEdgeImplementationClass(IsQuantifiedDeclOf.class, IsQuantifiedDeclOfImpl.class);

		setEdgeImplementationClass(IsConstraintOf.class, IsConstraintOfImpl.class);

		setEdgeImplementationClass(IsFalseExprOf.class, IsFalseExprOfImpl.class);

		setEdgeImplementationClass(IsTrueExprOf.class, IsTrueExprOfImpl.class);

		setEdgeImplementationClass(IsDeclaredVarOf.class, IsDeclaredVarOfImpl.class);

		setEdgeImplementationClass(IsSimpleDeclOf.class, IsSimpleDeclOfImpl.class);

		setEdgeImplementationClass(IsQueryExprOf.class, IsQueryExprOfImpl.class);

		setEdgeImplementationClass(IsTypeExprOfDeclaration.class, IsTypeExprOfDeclarationImpl.class);

		setEdgeImplementationClass(IsExponentOf.class, IsExponentOfImpl.class);

		setEdgeImplementationClass(IsEdgeVertexListOf.class, IsEdgeVertexListOfImpl.class);

		setEdgeImplementationClass(IsLastValueOf.class, IsLastValueOfImpl.class);

		setEdgeImplementationClass(IsSequenceElementOf.class, IsSequenceElementOfImpl.class);

		setEdgeImplementationClass(IsRestrictionOf.class, IsRestrictionOfImpl.class);

		setEdgeImplementationClass(IsBoundExprOfQuantifier.class, IsBoundExprOfQuantifierImpl.class);

		setEdgeImplementationClass(IsRestrictedExprOf.class, IsRestrictedExprOfImpl.class);

		setEdgeImplementationClass(IsPartOf.class, IsPartOfImpl.class);

		setEdgeImplementationClass(IsEdgeOrVertexExprOf.class, IsEdgeOrVertexExprOfImpl.class);

		setEdgeImplementationClass(IsConditionOf.class, IsConditionOfImpl.class);

		setEdgeImplementationClass(IsDirectionOf.class, IsDirectionOfImpl.class);

		setEdgeImplementationClass(IsColumnHeaderExprOf.class, IsColumnHeaderExprOfImpl.class);

		setEdgeImplementationClass(IsTypeRestrOf.class, IsTypeRestrOfImpl.class);

		setEdgeImplementationClass(IsArgumentOf.class, IsArgumentOfImpl.class);

		setEdgeImplementationClass(IsOptionalPathOf.class, IsOptionalPathOfImpl.class);

		setEdgeImplementationClass(IsRootOf.class, IsRootOfImpl.class);

		setEdgeImplementationClass(IsExponentiatedPathOf.class, IsExponentiatedPathOfImpl.class);

	}

}
