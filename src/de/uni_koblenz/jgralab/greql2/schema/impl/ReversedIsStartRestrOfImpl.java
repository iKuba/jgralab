/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema.impl;

import de.uni_koblenz.jgralab.impl.array.ReversedAggregationImpl;
import de.uni_koblenz.jgralab.impl.array.EdgeImpl;

import de.uni_koblenz.jgralab.Aggregation;
import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.Graph;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;

import de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation;
import de.uni_koblenz.jgralab.greql2.schema.IsStartRestrOf;
import de.uni_koblenz.jgralab.greql2.schema.SourcePosition;

import java.io.IOException;

public class ReversedIsStartRestrOfImpl extends ReversedAggregationImpl implements Aggregation, Greql2Aggregation, IsStartRestrOf {

	ReversedIsStartRestrOfImpl(EdgeImpl e, Graph g) {
		super(e, g);
	}

	public Object getAttribute(String attributeName) throws NoSuchFieldException {
		return ((IsStartRestrOf)normalEdge).getAttribute(attributeName);
	}

	public void setAttribute(String attributeName, Object data) throws NoSuchFieldException {
		((IsStartRestrOf)normalEdge).setAttribute(attributeName, data);
	}

	public java.util.List<SourcePosition> getSourcePositions() {
		return ((IsStartRestrOf)normalEdge).getSourcePositions();
	}

	public void setSourcePositions(java.util.List<SourcePosition> sourcePositions) {
		((IsStartRestrOf)normalEdge).setSourcePositions(sourcePositions);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
	}

	public Greql2Aggregation getNextGreql2AggregationInGraph() {
		return ((Greql2Aggregation)normalEdge).getNextGreql2AggregationInGraph();
	}

	public IsStartRestrOf getNextIsStartRestrOfInGraph() {
		return ((IsStartRestrOf)normalEdge).getNextIsStartRestrOfInGraph();
	}

	public IsStartRestrOf getNextIsStartRestrOfInGraph(boolean noSubClasses) {
		return ((IsStartRestrOf)normalEdge).getNextIsStartRestrOfInGraph(noSubClasses);
	}

	public Greql2Aggregation getNextGreql2Aggregation() {
		return (Greql2Aggregation)getNextEdgeOfClass(Greql2Aggregation.class);
	}

	public Greql2Aggregation getNextGreql2Aggregation(EdgeDirection orientation) {
		return (Greql2Aggregation)getNextEdgeOfClass(Greql2Aggregation.class, orientation);
	}

	public IsStartRestrOf getNextIsStartRestrOf() {
		return (IsStartRestrOf)getNextEdgeOfClass(IsStartRestrOf.class);
	}

	public IsStartRestrOf getNextIsStartRestrOf(EdgeDirection orientation) {
		return (IsStartRestrOf)getNextEdgeOfClass(IsStartRestrOf.class, orientation);
	}

	public IsStartRestrOf getNextIsStartRestrOf(boolean noSubClasses) {
		return (IsStartRestrOf)getNextEdgeOfClass(IsStartRestrOf.class, noSubClasses);
	}

	public IsStartRestrOf getNextIsStartRestrOf(EdgeDirection orientation, boolean noSubClasses) {
		return (IsStartRestrOf)getNextEdgeOfClass(IsStartRestrOf.class, orientation, noSubClasses);
	}

}
