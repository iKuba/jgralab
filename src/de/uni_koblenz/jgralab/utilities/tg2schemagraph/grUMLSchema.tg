Schema de.uni_koblenz.jgralab.utilities.tg2schemagraph.grumlschema.GrUMLSchema;
GraphClass GrUMLSchemaGraph;


VertexClass 'Schema { name: String };
abstract VertexClass AttributedElementClass { 'isAbstract: Boolean, name: String };
VertexClass 'GraphClass: AttributedElementClass;
abstract VertexClass GraphElementClass: AttributedElementClass;
VertexClass 'VertexClass: GraphElementClass;
VertexClass 'EdgeClass: GraphElementClass;
VertexClass 'AggregationClass: 'EdgeClass { aggregateFrom: Boolean };
VertexClass 'CompositionClass: 'AggregationClass;

VertexClass Attribute { name: String };
abstract VertexClass Domain;

abstract VertexClass CompositeDomain: Domain;
VertexClass SetDomain: CompositeDomain;
VertexClass 'RecordDomain: CompositeDomain { name: String };
VertexClass ListDomain: CompositeDomain;

abstract VertexClass BasicDomain: Domain;
VertexClass IntDomain: BasicDomain;
VertexClass BooleanDomain: BasicDomain;
VertexClass 'EnumDomain: BasicDomain { constants: List<String> };
VertexClass StringDomain: BasicDomain;
VertexClass LongDomain: BasicDomain;
VertexClass ObjectDomain: BasicDomain;
VertexClass DoubleDomain: BasicDomain;

AggregationClass HasAttribute from Attribute (0,*) to AttributedElementClass (1,1) aggregate to;
EdgeClass HasDomain from Domain (1,1) to Attribute (0,*);

EdgeClass HasBaseDomain from CompositeDomain (0,*) to Domain (0,1);
AggregationClass HasRecordDomainComponent from 'RecordDomain (0,*) to Domain (0,*) aggregate from {name: String};

AggregationClass To from 'EdgeClass (0,*) to 'VertexClass (1,1) aggregate from { min: Integer, max: Integer, roleName: String, 'redefines: Set<String> } ;
AggregationClass From from 'EdgeClass (0,*) to 'VertexClass (1,1) aggregate from { min: Integer, max: Integer, roleName: String, 'redefines: Set<String> };

CompositionClass ContainsGraphClass from 'GraphClass (1,*) to 'Schema (1,1) aggregate to;
CompositionClass ContainsGraphElementClass from GraphElementClass (0,*) to 'GraphClass (1,1) aggregate to;

abstract EdgeClass IsSubClassOf from AttributedElementClass (0,*) to AttributedElementClass (0,*);
EdgeClass IsSubEdgeClassOf: IsSubClassOf from 'EdgeClass (0,*) to 'EdgeClass (0,*);
EdgeClass IsSubVertexClassOf: IsSubClassOf from 'VertexClass (0,*) to 'VertexClass (0,*);
