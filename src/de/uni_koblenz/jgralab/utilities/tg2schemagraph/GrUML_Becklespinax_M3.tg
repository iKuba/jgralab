Schema de.uni_koblenz.jgralab.utilities.tg2schemagraph.grumlschema.GrUMLSchema;
GraphClass GrUMLSchemaGraph;
Package;
//StructuralVertexClasses
VertexClass 'Schema {name:String, packagePrefix:String};
VertexClass 'Package {name: String, qualifiedName: String, fullyQualifiedName:String};
abstract VertexClass 'Domain {name:String, qualifiedName: String, fullyQualifiedName: String};
VertexClass 'Attribute {name:String};
abstract VertexClass 'AttributedElementClass {isAbstract:Boolean, name:String, qualifiedName:String, fullyQualifiedName: String};
VertexClass 'GraphClass : 'AttributedElementClass;
abstract VertexClass 'GraphElementClass:'AttributedElementClass;
VertexClass 'VertexClass : 'GraphElementClass;
VertexClass 'EdgeClass : 'GraphElementClass;
VertexClass 'AggregationClass : 'EdgeClass {agregateFrom:Boolean};
VertexClass 'CompositionClass : 'AggregationClass;
//DomainVertexClasses
VertexClass 'RecordDomain:'Domain;
VertexClass 'EnumDomain:'Domain {enumConstants: List<String>};
VertexClass 'BooleanDomain:'Domain;
VertexClass 'IntDomain:'Domain;
VertexClass 'LongDomain:'Domain;
VertexClass 'DoubleDomain:'Domain;
VertexClass 'StringDomain:'Domain;
VertexClass 'ObjectDomain:'Domain;
VertexClass 'ListDomain:'Domain;
VertexClass 'SetDomain:'Domain;
//StructuralEdgeClasses
CompositionClass DefinesGraphClass from 'Schema (1,1) to 'GraphClass (1,1) aggregate from;
AggregationClass ContainsDomain from 'Schema(1,1) to 'Domain (0,*) aggregate from;
AggregationClass ContainsDefaultPackage from 'Schema(0,1) to 'Package(1,1) aggregate from;
EdgeClass HasDomain from 'Attribute (0,*) to 'Domain(1,1);
AggregationClass HasAttribute from 'AttributedElementClass (1,1) to 'Attribute (0,*) aggregate from;
CompositionClass ContainsGraphElementClass from 'Package(1,1) to 'GraphElementClass(0,*) aggregate from;
AggregationClass ContainsSubPackage from 'Package(0,1) to 'Package(0,*) aggregate from;
EdgeClass SpecializesVertexClass from 'VertexClass(0,*) to 'VertexClass(0,*);
EdgeClass SpecializesEdgeClass from 'EdgeClass(0,*) to 'EdgeClass(0,*);
AggregationClass To from 'EdgeClass(0,*) to 'VertexClass(1,1) aggregate from {min:Integer, max:Integer, roleName:String, redefinedRoles:Set<String>};
AggregationClass From from 'EdgeClass(0,*) to 'VertexClass(1,1) aggregate from {min:Integer, max:Integer, roleName:String, redefinedRoles:Set<String>};
//DomainEdgeClasses
EdgeClass HasSetElementDomain from 'SetDomain(0,*) to 'Domain(1,1);
EdgeClass HasListElementDomain from 'ListDomain(0,*) to 'Domain(1,1);
AggregationClass HasRecordDomainComponent from RecordDomain(0,*) to 'Domain(1,*) aggregate from {name:String};
CompositionClass ContainsRecordDomain from 'Package(1,1) to 'RecordDomain(0,*) aggregate from;
CompositionClass ContainsEnumDomain from 'Package(1,1) to 'EnumDomain(0,*) aggregate from;

