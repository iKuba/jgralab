/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.utilities.tg2schemagraph.grumlschema.impl;

import de.uni_koblenz.jgralab.impl.array.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeClass;
import de.uni_koblenz.jgralab.AttributedElement;
import de.uni_koblenz.jgralab.Edge;
import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.Graph;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;

import de.uni_koblenz.jgralab.utilities.tg2schemagraph.grumlschema.impl.ReversedHasDomainM2Impl;

import de.uni_koblenz.jgralab.utilities.tg2schemagraph.grumlschema.HasDomainM2;

import java.io.IOException;
/**
FromVertexClass: DomainM2
FromRoleName : 
ToVertexClass: AttributeM2
toRoleName : 
 */

public class HasDomainM2Impl extends EdgeImpl implements Edge, HasDomainM2 {

	public HasDomainM2Impl(int id, Graph g) {
		super(id, g, (EdgeClass)g.getGraphClass().getGraphElementClass("HasDomainM2"));
		reversedEdge = new ReversedHasDomainM2Impl(this, g);
	}

	public Class<? extends AttributedElement> getM1Class() {
		return HasDomainM2.class;
	}

	public Object getAttribute(String attributeName) throws NoSuchFieldException {
		throw new NoSuchFieldException("HasDomainM2 doesn't contain an attribute " + attributeName);
	}

	@SuppressWarnings("unchecked")
	public void setAttribute(String attributeName, Object data) throws NoSuchFieldException {
		throw new NoSuchFieldException("HasDomainM2 doesn't contain an attribute " + attributeName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
	}

	public HasDomainM2 getNextHasDomainM2InGraph() {
		return (HasDomainM2)getNextEdgeOfClassInGraph(HasDomainM2.class);
	}

	public HasDomainM2 getNextHasDomainM2InGraph(boolean noSubClasses) {
		return (HasDomainM2)getNextEdgeOfClassInGraph(HasDomainM2.class, noSubClasses);
	}

	public HasDomainM2 getNextHasDomainM2() {
		return (HasDomainM2)getNextEdgeOfClass(HasDomainM2.class);
	}

	public HasDomainM2 getNextHasDomainM2(EdgeDirection orientation) {
		return (HasDomainM2)getNextEdgeOfClass(HasDomainM2.class, orientation);
	}

	public HasDomainM2 getNextHasDomainM2(boolean noSubClasses) {
		return (HasDomainM2)getNextEdgeOfClass(HasDomainM2.class, noSubClasses);
	}

	public HasDomainM2 getNextHasDomainM2(EdgeDirection orientation, boolean noSubClasses) {
		return (HasDomainM2)getNextEdgeOfClass(HasDomainM2.class, orientation, noSubClasses);
	}

}
