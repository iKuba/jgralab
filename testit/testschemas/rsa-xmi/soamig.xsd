<?xml version="1.0" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:smg="http://soamig.de/SoamigSchema-0-2" targetNamespace="http://soamig.de/SoamigSchema-0-2">
 	<!--Default types-->
 	<xsd:complexType name="BT_AttributedElement" abstract="true"/>
 	<xsd:complexType name="BT_Graph" abstract="true">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_AttributedElement">
 	 	 	 	<xsd:attribute name="id" type="xsd:ID" use="required"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<xsd:complexType name="BT_Vertex" abstract="true">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_AttributedElement">
 	 	 	 	<xsd:attribute name="id" type="xsd:ID" use="required"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<xsd:complexType name="BT_Edge" abstract="true">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_AttributedElement">
 	 	 	 	<xsd:attribute name="from" type="xsd:IDREF" use="required"/>
 	 	 	 	<xsd:attribute name="to" type="xsd:IDREF" use="required"/>
 	 	 	 	<xsd:attribute name="fseq" type="smg:ST_INTEGER"/>
 	 	 	 	<xsd:attribute name="tseq" type="smg:ST_INTEGER"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<xsd:simpleType name="ST_BOOLEAN">
 	 	<xsd:restriction base="xsd:string">
 	 	 	<xsd:enumeration value="t"/>
 	 	 	<xsd:enumeration value="f"/>
 	 	</xsd:restriction>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_STRING">
 	 	<xsd:restriction base="xsd:string"/>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_INTEGER">
 	 	<xsd:restriction base="xsd:integer"/>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_LONG">
 	 	<xsd:restriction base="xsd:long"/>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_DOUBLE">
 	 	<xsd:restriction base="xsd:double"/>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_LIST">
 	 	<xsd:restriction base="xsd:string"/>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_SET">
 	 	<xsd:restriction base="xsd:string"/>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_MAP">
 	 	<xsd:restriction base="xsd:string"/>
 	</xsd:simpleType>
 	<!--Graph-type-->
 	<xsd:element name="SoamigGraph" type="smg:GT_SoamigGraph"/>
 	<xsd:complexType name="GT_SoamigGraph">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Graph">
 	 	 	 	<xsd:choice minOccurs="0" maxOccurs="unbounded">
 	 	 	 	 	<xsd:element name="frontend.common.TokenList" type="smg:VT_frontend.common.TokenList"/>
 	 	 	 	 	<xsd:element name="frontend.common.AnalysisRun" type="smg:VT_frontend.common.AnalysisRun"/>
 	 	 	 	 	<xsd:element name="frontend.java.Annotation" type="smg:VT_frontend.java.Annotation"/>
 	 	 	 	 	<xsd:element name="frontend.java.DataObject" type="smg:VT_frontend.java.DataObject"/>
 	 	 	 	 	<xsd:element name="frontend.java.JavaToken" type="smg:VT_frontend.java.JavaToken"/>
 	 	 	 	 	<xsd:element name="frontend.java.JavaComment" type="smg:VT_frontend.java.JavaComment"/>
 	 	 	 	 	<xsd:element name="frontend.java.Package" type="smg:VT_frontend.java.Package"/>
 	 	 	 	 	<xsd:element name="frontend.java.Declaration" type="smg:VT_frontend.java.Declaration"/>
 	 	 	 	 	<xsd:element name="frontend.java.Interface" type="smg:VT_frontend.java.Interface"/>
 	 	 	 	 	<xsd:element name="frontend.java.MethodType" type="smg:VT_frontend.java.MethodType"/>
 	 	 	 	 	<xsd:element name="frontend.java.Block" type="smg:VT_frontend.java.Block"/>
 	 	 	 	 	<xsd:element name="frontend.java.Constructor" type="smg:VT_frontend.java.Constructor"/>
 	 	 	 	 	<xsd:element name="frontend.java.CaseStatement" type="smg:VT_frontend.java.CaseStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.WhileLoop" type="smg:VT_frontend.java.WhileLoop"/>
 	 	 	 	 	<xsd:element name="frontend.java.ForLoop" type="smg:VT_frontend.java.ForLoop"/>
 	 	 	 	 	<xsd:element name="frontend.java.DoLoop" type="smg:VT_frontend.java.DoLoop"/>
 	 	 	 	 	<xsd:element name="frontend.java.Break" type="smg:VT_frontend.java.Break"/>
 	 	 	 	 	<xsd:element name="frontend.java.Continue" type="smg:VT_frontend.java.Continue"/>
 	 	 	 	 	<xsd:element name="frontend.java.EmptyStatement" type="smg:VT_frontend.java.EmptyStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.IfStatement" type="smg:VT_frontend.java.IfStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.PackageStatement" type="smg:VT_frontend.java.PackageStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.ReturnStatement" type="smg:VT_frontend.java.ReturnStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.ThrowStatement" type="smg:VT_frontend.java.ThrowStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.SwitchStatement" type="smg:VT_frontend.java.SwitchStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.SynchronizedStatement" type="smg:VT_frontend.java.SynchronizedStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.Access" type="smg:VT_frontend.java.Access"/>
 	 	 	 	 	<xsd:element name="frontend.java.AssertStatement" type="smg:VT_frontend.java.AssertStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.TryStatement" type="smg:VT_frontend.java.TryStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.CatchStatement" type="smg:VT_frontend.java.CatchStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.Class" type="smg:VT_frontend.java.Class"/>
 	 	 	 	 	<xsd:element name="frontend.java.ForEachLoop" type="smg:VT_frontend.java.ForEachLoop"/>
 	 	 	 	 	<xsd:element name="frontend.java.ExpressionStatement" type="smg:VT_frontend.java.ExpressionStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.Cast" type="smg:VT_frontend.java.Cast"/>
 	 	 	 	 	<xsd:element name="frontend.java.Literal" type="smg:VT_frontend.java.Literal"/>
 	 	 	 	 	<xsd:element name="frontend.java.InstanceOf" type="smg:VT_frontend.java.InstanceOf"/>
 	 	 	 	 	<xsd:element name="frontend.java.NewArray" type="smg:VT_frontend.java.NewArray"/>
 	 	 	 	 	<xsd:element name="frontend.java.NewObject" type="smg:VT_frontend.java.NewObject"/>
 	 	 	 	 	<xsd:element name="frontend.java.Operation" type="smg:VT_frontend.java.Operation"/>
 	 	 	 	 	<xsd:element name="frontend.java.InitBlock" type="smg:VT_frontend.java.InitBlock"/>
 	 	 	 	 	<xsd:element name="frontend.java.Enumeration" type="smg:VT_frontend.java.Enumeration"/>
 	 	 	 	 	<xsd:element name="frontend.java.LabelType" type="smg:VT_frontend.java.LabelType"/>
 	 	 	 	 	<xsd:element name="frontend.java.PrimitiveType" type="smg:VT_frontend.java.PrimitiveType"/>
 	 	 	 	 	<xsd:element name="frontend.java.TypeReference" type="smg:VT_frontend.java.TypeReference"/>
 	 	 	 	 	<xsd:element name="frontend.java.ImportStatement" type="smg:VT_frontend.java.ImportStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.StaticImportStatement" type="smg:VT_frontend.java.StaticImportStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.SourceFile" type="smg:VT_frontend.java.SourceFile"/>
 	 	 	 	 	<xsd:element name="frontend.java.ClassFile" type="smg:VT_frontend.java.ClassFile"/>
 	 	 	 	 	<xsd:element name="frontend.java.JarFile" type="smg:VT_frontend.java.JarFile"/>
 	 	 	 	 	<xsd:element name="frontend.common.BeginsAt" type="smg:ET_frontend.common.BeginsAt"/>
 	 	 	 	 	<xsd:element name="frontend.common.EndsAt" type="smg:ET_frontend.common.EndsAt"/>
 	 	 	 	 	<xsd:element name="frontend.common.HasTokenList" type="smg:ET_frontend.common.HasTokenList"/>
 	 	 	 	 	<xsd:element name="frontend.common.ContainsFile" type="smg:ET_frontend.common.ContainsFile"/>
 	 	 	 	 	<xsd:element name="frontend.common.ContainsToken" type="smg:ET_frontend.common.ContainsToken"/>
 	 	 	 	 	<xsd:element name="frontend.java.AnnotationHasParameter" type="smg:ET_frontend.java.AnnotationHasParameter"/>
 	 	 	 	 	<xsd:element name="frontend.java.AnnotationHasObject" type="smg:ET_frontend.java.AnnotationHasObject"/>
 	 	 	 	 	<xsd:element name="frontend.java.BeginsAt" type="smg:ET_frontend.java.BeginsAt"/>
 	 	 	 	 	<xsd:element name="frontend.java.EndsAt" type="smg:ET_frontend.java.EndsAt"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasJavaComment" type="smg:ET_frontend.java.HasJavaComment"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasMethod" type="smg:ET_frontend.java.HasMethod"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasField" type="smg:ET_frontend.java.HasField"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasDeclarations" type="smg:ET_frontend.java.HasDeclarations"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasSuperclass" type="smg:ET_frontend.java.HasSuperclass"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasExtendsExpression" type="smg:ET_frontend.java.HasExtendsExpression"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasAnnotation" type="smg:ET_frontend.java.HasAnnotation"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasLabel" type="smg:ET_frontend.java.HasLabel"/>
 	 	 	 	 	<xsd:element name="frontend.java.MethodHasParameter" type="smg:ET_frontend.java.MethodHasParameter"/>
 	 	 	 	 	<xsd:element name="frontend.java.ThrowsException" type="smg:ET_frontend.java.ThrowsException"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasReturnType" type="smg:ET_frontend.java.HasReturnType"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasMethodBlock" type="smg:ET_frontend.java.HasMethodBlock"/>
 	 	 	 	 	<xsd:element name="frontend.java.BlockContainsCaseStatement" type="smg:ET_frontend.java.BlockContainsCaseStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.BlockContainsStatement" type="smg:ET_frontend.java.BlockContainsStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasBody" type="smg:ET_frontend.java.HasBody"/>
 	 	 	 	 	<xsd:element name="frontend.java.LoopHasTerminationCondition" type="smg:ET_frontend.java.LoopHasTerminationCondition"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasIncrementStatement" type="smg:ET_frontend.java.HasIncrementStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasInitStatement" type="smg:ET_frontend.java.HasInitStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasExpressionType" type="smg:ET_frontend.java.HasExpressionType"/>
 	 	 	 	 	<xsd:element name="frontend.java.RefersTo" type="smg:ET_frontend.java.RefersTo"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasThenBlock" type="smg:ET_frontend.java.HasThenBlock"/>
 	 	 	 	 	<xsd:element name="frontend.java.IfStatementHasTerminationCondition" type="smg:ET_frontend.java.IfStatementHasTerminationCondition"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasElseStatement" type="smg:ET_frontend.java.HasElseStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasImportExpression" type="smg:ET_frontend.java.HasImportExpression"/>
 	 	 	 	 	<xsd:element name="frontend.java.ImportsFromFile" type="smg:ET_frontend.java.ImportsFromFile"/>
 	 	 	 	 	<xsd:element name="frontend.java.PackageStatementDeclares" type="smg:ET_frontend.java.PackageStatementDeclares"/>
 	 	 	 	 	<xsd:element name="frontend.java.ContainsPackageExpression" type="smg:ET_frontend.java.ContainsPackageExpression"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasReturnValue" type="smg:ET_frontend.java.HasReturnValue"/>
 	 	 	 	 	<xsd:element name="frontend.java.ThrowStatementThrowsException" type="smg:ET_frontend.java.ThrowStatementThrowsException"/>
 	 	 	 	 	<xsd:element name="frontend.java.SwitchStatementContainsCaseStatement" type="smg:ET_frontend.java.SwitchStatementContainsCaseStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.CaseStatementContainsStatement" type="smg:ET_frontend.java.CaseStatementContainsStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.ChecksExpression" type="smg:ET_frontend.java.ChecksExpression"/>
 	 	 	 	 	<xsd:element name="frontend.java.ContainsDefaultStatement" type="smg:ET_frontend.java.ContainsDefaultStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasGuardObject" type="smg:ET_frontend.java.HasGuardObject"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasSynchronizedBlock" type="smg:ET_frontend.java.HasSynchronizedBlock"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasDataObject" type="smg:ET_frontend.java.HasDataObject"/>
 	 	 	 	 	<xsd:element name="frontend.java.Asserts" type="smg:ET_frontend.java.Asserts"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasErrorExpression" type="smg:ET_frontend.java.HasErrorExpression"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasFinallyBlock" type="smg:ET_frontend.java.HasFinallyBlock"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasCatchStatement" type="smg:ET_frontend.java.HasCatchStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasTryBlock" type="smg:ET_frontend.java.HasTryBlock"/>
 	 	 	 	 	<xsd:element name="frontend.java.CatchesException" type="smg:ET_frontend.java.CatchesException"/>
 	 	 	 	 	<xsd:element name="frontend.java.DeclarationDeclares" type="smg:ET_frontend.java.DeclarationDeclares"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasRunner" type="smg:ET_frontend.java.HasRunner"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasIterable" type="smg:ET_frontend.java.HasIterable"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasExpression" type="smg:ET_frontend.java.HasExpression"/>
 	 	 	 	 	<xsd:element name="frontend.java.CastExpression" type="smg:ET_frontend.java.CastExpression"/>
 	 	 	 	 	<xsd:element name="frontend.java.InstanceOfChecksExpression" type="smg:ET_frontend.java.InstanceOfChecksExpression"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasPrimary" type="smg:ET_frontend.java.HasPrimary"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasTypeObject" type="smg:ET_frontend.java.HasTypeObject"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasInitialValue" type="smg:ET_frontend.java.HasInitialValue"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasDimensions" type="smg:ET_frontend.java.HasDimensions"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasConstructorCall" type="smg:ET_frontend.java.HasConstructorCall"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasClassbody" type="smg:ET_frontend.java.HasClassbody"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasOperand" type="smg:ET_frontend.java.HasOperand"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasConstructor" type="smg:ET_frontend.java.HasConstructor"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasStaticInitBlock" type="smg:ET_frontend.java.HasStaticInitBlock"/>
 	 	 	 	 	<xsd:element name="frontend.java.ImplementsInterface" type="smg:ET_frontend.java.ImplementsInterface"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasLiteral" type="smg:ET_frontend.java.HasLiteral"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasInitValue" type="smg:ET_frontend.java.HasInitValue"/>
 	 	 	 	 	<xsd:element name="frontend.java.DataObjectHasType" type="smg:ET_frontend.java.DataObjectHasType"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasStatement" type="smg:ET_frontend.java.HasStatement"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasNamedType" type="smg:ET_frontend.java.HasNamedType"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasBasicStaticImport" type="smg:ET_frontend.java.HasBasicStaticImport"/>
 	 	 	 	 	<xsd:element name="frontend.java.HasStaticImport" type="smg:ET_frontend.java.HasStaticImport"/>
 	 	 	 	 	<xsd:element name="frontend.java.ContainsJavaFile" type="smg:ET_frontend.java.ContainsJavaFile"/>
 	 	 	 	</xsd:choice>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--Vertex-types-->
 	<!--VertexClass frontend.common.TokenList;-->
 	<xsd:complexType name="VT_frontend.common.TokenList">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.common.AnalysisRun
	{ tool: String, commandLineOptions: String };-->
 	<xsd:complexType name="VT_frontend.common.AnalysisRun">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="tool" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="commandLineOptions" type="smg:ST_STRING"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Annotation: frontend.java.ClassType
	{ annotationName: String };
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Annotation">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="annotationName" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.DataObject: frontend.java.JavaObject
	{ name: String, used: Integer, multipleValues: Integer, fullyQualifiedName: String };
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.DataObject">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="used" type="smg:ST_INTEGER"/>
 	 	 	 	<xsd:attribute name="multipleValues" type="smg:ST_INTEGER"/>
 	 	 	 	<xsd:attribute name="fullyQualifiedName" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.JavaToken: frontend.common.Token
	{ pos: frontend.java.JavaTokenPosition, type: frontend.java.TokenType };
Inherited attributes from frontend.common.Token:
	{ text: String, visibility: frontend.common.TokenVisibility }-->
 	<xsd:complexType name="VT_frontend.java.JavaToken">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="pos" type="smg:ST_RECORD_frontend.java.JavaTokenPosition"/>
 	 	 	 	<xsd:attribute name="type" type="smg:ST_ENUM_frontend.java.TokenType"/>
 	 	 	 	<xsd:attribute name="text" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="visibility" type="smg:ST_ENUM_frontend.common.TokenVisibility"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.JavaComment: frontend.common.Comment;
Inherited attributes from frontend.common.Comment:
	{ content: String }-->
 	<xsd:complexType name="VT_frontend.java.JavaComment">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="content" type="smg:ST_STRING"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Package: frontend.java.JavaType;
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Package">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Declaration: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Declaration">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Interface: frontend.java.ClassType;
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Interface">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.MethodType: frontend.java.JavaType;
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.MethodType">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Block: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Block">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Constructor: frontend.java.MethodType;
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Constructor">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.CaseStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.CaseStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.WhileLoop: frontend.java.Loop;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.WhileLoop">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.ForLoop: frontend.java.Loop;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.ForLoop">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.DoLoop: frontend.java.Loop;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.DoLoop">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Break: frontend.java.LoopBranchStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Break">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Continue: frontend.java.LoopBranchStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Continue">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.EmptyStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.EmptyStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.IfStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.IfStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.PackageStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.PackageStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.ReturnStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.ReturnStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.ThrowStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.ThrowStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.SwitchStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.SwitchStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.SynchronizedStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.SynchronizedStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Access: frontend.java.JavaExpression
	{ name: String };
Inherited attributes from frontend.java.JavaExpression:
	{ operator: frontend.java.TokenType }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Access">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="operator" type="smg:ST_ENUM_frontend.java.TokenType"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.AssertStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.AssertStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.TryStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.TryStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.CatchStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.CatchStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Class: frontend.java.ClassType;
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Class">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.ForEachLoop: frontend.java.Loop;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.ForEachLoop">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.ExpressionStatement: frontend.java.JavaStatement;
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.ExpressionStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Cast: frontend.java.JavaExpression;
Inherited attributes from frontend.java.JavaExpression:
	{ operator: frontend.java.TokenType }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Cast">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="operator" type="smg:ST_ENUM_frontend.java.TokenType"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Literal: frontend.java.JavaExpression
	{ value: String };
Inherited attributes from frontend.java.JavaExpression:
	{ operator: frontend.java.TokenType }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Literal">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="value" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="operator" type="smg:ST_ENUM_frontend.java.TokenType"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.InstanceOf: frontend.java.JavaExpression;
Inherited attributes from frontend.java.JavaExpression:
	{ operator: frontend.java.TokenType }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.InstanceOf">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="operator" type="smg:ST_ENUM_frontend.java.TokenType"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.NewArray: frontend.java.NewExpression;
Inherited attributes from frontend.java.JavaExpression:
	{ operator: frontend.java.TokenType }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.NewArray">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="operator" type="smg:ST_ENUM_frontend.java.TokenType"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.NewObject: frontend.java.NewExpression;
Inherited attributes from frontend.java.JavaExpression:
	{ operator: frontend.java.TokenType }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.NewObject">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="operator" type="smg:ST_ENUM_frontend.java.TokenType"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Operation: frontend.java.JavaExpression
	{ arity: Integer };
Inherited attributes from frontend.java.JavaExpression:
	{ operator: frontend.java.TokenType }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Operation">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="arity" type="smg:ST_INTEGER"/>
 	 	 	 	<xsd:attribute name="operator" type="smg:ST_ENUM_frontend.java.TokenType"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.InitBlock: frontend.java.MethodType;
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.InitBlock">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.Enumeration: frontend.java.Class;
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.Enumeration">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.LabelType: frontend.java.SimpleType;
Inherited attributes from frontend.java.SimpleType:
	{ type: frontend.java.BaseType, dimensions: Integer }
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.LabelType">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="type" type="smg:ST_ENUM_frontend.java.BaseType"/>
 	 	 	 	<xsd:attribute name="dimensions" type="smg:ST_INTEGER"/>
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.PrimitiveType: frontend.java.SimpleType;
Inherited attributes from frontend.java.SimpleType:
	{ type: frontend.java.BaseType, dimensions: Integer }
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.PrimitiveType">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="type" type="smg:ST_ENUM_frontend.java.BaseType"/>
 	 	 	 	<xsd:attribute name="dimensions" type="smg:ST_INTEGER"/>
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.TypeReference: frontend.java.SimpleType;
Inherited attributes from frontend.java.SimpleType:
	{ type: frontend.java.BaseType, dimensions: Integer }
Inherited attributes from frontend.java.JavaType:
	{ name: String, typeString: String, modifier: Set<frontend.java.Modifier> }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.TypeReference">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="type" type="smg:ST_ENUM_frontend.java.BaseType"/>
 	 	 	 	<xsd:attribute name="dimensions" type="smg:ST_INTEGER"/>
 	 	 	 	<xsd:attribute name="name" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="typeString" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="modifier" type="smg:ST_SET"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.ImportStatement: frontend.java.AbstractImportStatement;
Inherited attributes from frontend.java.AbstractImportStatement:
	{ packagePrefix: String, element: String }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.ImportStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="packagePrefix" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="element" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.StaticImportStatement: frontend.java.AbstractImportStatement;
Inherited attributes from frontend.java.AbstractImportStatement:
	{ packagePrefix: String, element: String }
Inherited attributes from frontend.java.JavaObject:
	{ options: Set<frontend.java.Options> }-->
 	<xsd:complexType name="VT_frontend.java.StaticImportStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="packagePrefix" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="element" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="options" type="smg:ST_SET"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.SourceFile: frontend.java.JavaFile
	{ encoding: String };
Inherited attributes from frontend.common.File:
	{ originalName: String, convertedName: String, processedName: String }-->
 	<xsd:complexType name="VT_frontend.java.SourceFile">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="encoding" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="originalName" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="convertedName" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="processedName" type="smg:ST_STRING"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.ClassFile: frontend.java.JavaFile;
Inherited attributes from frontend.common.File:
	{ originalName: String, convertedName: String, processedName: String }-->
 	<xsd:complexType name="VT_frontend.java.ClassFile">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="originalName" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="convertedName" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="processedName" type="smg:ST_STRING"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--VertexClass frontend.java.JarFile: frontend.java.JavaFile;
Inherited attributes from frontend.common.File:
	{ originalName: String, convertedName: String, processedName: String }-->
 	<xsd:complexType name="VT_frontend.java.JarFile">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Vertex">
 	 	 	 	<xsd:attribute name="originalName" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="convertedName" type="smg:ST_STRING"/>
 	 	 	 	<xsd:attribute name="processedName" type="smg:ST_STRING"/>
 	 	 	</xsd:extension>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--Edge-types-->
 	<!--AggregationClass frontend.common.BeginsAt
	from frontend.common.LanguageObject (0, *) role startOfObject
	to frontend.common.Token (1, 1) role fromToken
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.common.BeginsAt">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.common.EndsAt
	from frontend.common.LanguageObject (0, *) role endOfObject
	to frontend.common.Token (1, 1) role toToken
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.common.EndsAt">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.common.HasTokenList
	from frontend.common.File (1, 1)
	to frontend.common.TokenList (0, *) role tokenList
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.common.HasTokenList">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.common.ContainsFile
	from frontend.common.AnalysisRun (1, 1) role fileset
	to frontend.common.File (0, *) role file
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.common.ContainsFile">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.common.ContainsToken
	from frontend.common.TokenList (1, 1)
	to frontend.common.Token (0, *) role token
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.common.ContainsToken">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.AnnotationHasParameter
	from frontend.java.Annotation (0, 1)
	to frontend.java.DataObject (0, *) role parameter
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.AnnotationHasParameter">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.AnnotationHasObject
	from frontend.java.Annotation (0, 1)
	to frontend.java.DataObject (1, 1) role myObject
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.AnnotationHasObject">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.BeginsAt: frontend.common.BeginsAt
	from frontend.java.JavaObject (1, 1)
	to frontend.java.JavaToken (0, *) role startOfJavaObject
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.BeginsAt">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.EndsAt: frontend.common.EndsAt
	from frontend.java.JavaObject (1, 1)
	to frontend.java.JavaToken (0, *) role endOfJavaObject
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.EndsAt">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasJavaComment: frontend.common.HasComment
	from frontend.java.JavaObject (0, *)
	to frontend.java.JavaComment (0, *) role javaComment
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasJavaComment">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasMethod
	from frontend.java.ClassType (1, 1)
	to frontend.java.DataObject (0, *) role method
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasMethod">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasField
	from frontend.java.ClassType (0, 1)
	to frontend.java.DataObject (0, *) role attribute
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasField">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasDeclarations
	from frontend.java.ClassType (0, 1)
	to frontend.java.Declaration (0, *) role declaration
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasDeclarations">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasSuperclass
	from frontend.java.ClassType (0, *)
	to frontend.java.DataObject (0, 1) role superclass
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasSuperclass">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasExtendsExpression
	from frontend.java.ClassType (0, 1)
	to frontend.java.JavaExpression (0, 1) role extendsExpression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasExtendsExpression">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasAnnotation
	from frontend.java.JavaType (0, *)
	to frontend.java.Annotation (0, *) role annotation
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasAnnotation">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasLabel
	from frontend.java.JavaStatement (1, 1)
	to frontend.java.DataObject (0, *) role label
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasLabel">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.MethodHasParameter
	from frontend.java.MethodType (1, 1)
	to frontend.java.DataObject (0, *) role parameter
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.MethodHasParameter">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.ThrowsException
	from frontend.java.MethodType (0, 1)
	to frontend.java.JavaExpression (0, *) role exception
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.ThrowsException">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasReturnType
	from frontend.java.MethodType (1, 1)
	to frontend.java.JavaType (0, *) role returnType
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasReturnType">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasMethodBlock
	from frontend.java.MethodType (0, 1)
	to frontend.java.Block (0, 1) role meohodBlock
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasMethodBlock">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.BlockContainsCaseStatement: frontend.java.BlockContainsStatement
	from frontend.java.Block (1, 1)
	to frontend.java.CaseStatement (0, *) role caseStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.BlockContainsCaseStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.BlockContainsStatement
	from frontend.java.Block (0, 1) role block
	to frontend.java.JavaStatement (0, *) role statement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.BlockContainsStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasBody
	from frontend.java.Loop (0, 1)
	to frontend.java.JavaStatement (1, 1) role loopBody
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasBody">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.LoopHasTerminationCondition
	from frontend.java.Loop (0, 1)
	to frontend.java.JavaExpression (0, 1) role terminationCondition
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.LoopHasTerminationCondition">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasIncrementStatement
	from frontend.java.ForLoop (0, 1)
	to frontend.java.JavaStatement (0, *) role incrementStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasIncrementStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasInitStatement
	from frontend.java.ForLoop (0, 1)
	to frontend.java.JavaStatement (0, *) role initStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasInitStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasExpressionType
	from frontend.java.JavaExpression (0, *)
	to frontend.java.JavaType (1, 1) role expressionType
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasExpressionType">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--EdgeClass frontend.java.RefersTo
	from frontend.java.LoopBranchStatement (0, *) role loopBranchStatement
	to frontend.java.DataObject (0, 1) role jumpTo;-->
 	<xsd:complexType name="ET_frontend.java.RefersTo">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasThenBlock
	from frontend.java.IfStatement (0, 1)
	to frontend.java.JavaStatement (1, 1) role thenBlock
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasThenBlock">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.IfStatementHasTerminationCondition
	from frontend.java.IfStatement (0, 1)
	to frontend.java.JavaExpression (1, 1) role terminationCondition
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.IfStatementHasTerminationCondition">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasElseStatement
	from frontend.java.IfStatement (0, 1)
	to frontend.java.JavaStatement (0, 1) role javaStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasElseStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasImportExpression
	from frontend.java.AbstractImportStatement (0, 1)
	to frontend.java.JavaExpression (1, 1) role importExpression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasImportExpression">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--EdgeClass frontend.java.ImportsFromFile
	from frontend.java.AbstractImportStatement (0, *)
	to frontend.java.JavaFile (0, 1) role file;-->
 	<xsd:complexType name="ET_frontend.java.ImportsFromFile">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--EdgeClass frontend.java.PackageStatementDeclares: frontend.java.DeclarationDeclares
	from frontend.java.PackageStatement (0, *) role packageStatement
	to frontend.java.Package (1, 1) role package;-->
 	<xsd:complexType name="ET_frontend.java.PackageStatementDeclares">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.ContainsPackageExpression
	from frontend.java.PackageStatement (1, 1)
	to frontend.java.JavaExpression (0, *) role packageExpression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.ContainsPackageExpression">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasReturnValue
	from frontend.java.ReturnStatement (0, 1)
	to frontend.java.JavaExpression (0, 0) role returnValue
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasReturnValue">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.ThrowStatementThrowsException
	from frontend.java.ThrowStatement (0, 1)
	to frontend.java.JavaExpression (1, 1) role exception
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.ThrowStatementThrowsException">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.SwitchStatementContainsCaseStatement
	from frontend.java.SwitchStatement (1, 1)
	to frontend.java.CaseStatement (0, *) role caseStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.SwitchStatementContainsCaseStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.CaseStatementContainsStatement
	from frontend.java.CaseStatement (0, 1)
	to frontend.java.JavaStatement (0, *) role javaStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.CaseStatementContainsStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.ChecksExpression
	from frontend.java.CaseStatement (0, 1)
	to frontend.java.JavaExpression (0, *) role conditionConstant
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.ChecksExpression">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.ContainsDefaultStatement
	from frontend.java.SwitchStatement (0, 1)
	to frontend.java.JavaStatement (0, *) role defaultStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.ContainsDefaultStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasGuardObject
	from frontend.java.SynchronizedStatement (0, 1)
	to frontend.java.JavaExpression (1, 1) role guard
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasGuardObject">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasSynchronizedBlock
	from frontend.java.SynchronizedStatement (0, 1)
	to frontend.java.Block (1, 1) role SynchronizedBlock
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasSynchronizedBlock">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--EdgeClass frontend.java.HasDataObject
	from frontend.java.Access (1, *)
	to frontend.java.DataObject (1, 1) role myObject;-->
 	<xsd:complexType name="ET_frontend.java.HasDataObject">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.Asserts
	from frontend.java.AssertStatement (0, 1)
	to frontend.java.JavaExpression (1, 1) role booleanExpression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.Asserts">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasErrorExpression
	from frontend.java.AssertStatement (0, 1)
	to frontend.java.JavaExpression (0, 1) role errorExpression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasErrorExpression">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasFinallyBlock
	from frontend.java.TryStatement (0, 1)
	to frontend.java.Block (0, 1) role finallyBlock
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasFinallyBlock">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasCatchStatement
	from frontend.java.TryStatement (1, 1)
	to frontend.java.CatchStatement (0, *) role catchStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasCatchStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasTryBlock
	from frontend.java.TryStatement (0, 1)
	to frontend.java.Block (1, 1) role tryBlock
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasTryBlock">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.CatchesException
	from frontend.java.CatchStatement (0, 1)
	to frontend.java.DataObject (1, 1) role exception
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.CatchesException">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--EdgeClass frontend.java.DeclarationDeclares
	from frontend.java.Declaration (1, 1) role myDeclaration
	to frontend.java.DataObject (0, *) role dataObject;-->
 	<xsd:complexType name="ET_frontend.java.DeclarationDeclares">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasRunner
	from frontend.java.ForEachLoop (0, 1)
	to frontend.java.JavaStatement (1, 1) role runner
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasRunner">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasIterable
	from frontend.java.ForEachLoop (0, 1)
	to frontend.java.JavaExpression (1, 1) role iterable
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasIterable">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasExpression
	from frontend.java.ExpressionStatement (0, 1)
	to frontend.java.JavaExpression (1, 1) role expression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasExpression">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.CastExpression
	from frontend.java.Cast (0, 1)
	to frontend.java.JavaExpression (1, 1) role javaExpression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.CastExpression">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.InstanceOfChecksExpression
	from frontend.java.InstanceOf (0, 1)
	to frontend.java.JavaExpression (1, 1) role expression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.InstanceOfChecksExpression">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasPrimary
	from frontend.java.NewExpression (0, 1)
	to frontend.java.JavaExpression (1, 1) role primary
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasPrimary">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasTypeObject
	from frontend.java.NewExpression (1, 1)
	to frontend.java.DataObject (0, *) role typeObject
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasTypeObject">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasInitialValue
	from frontend.java.NewArray (0, 1)
	to frontend.java.JavaExpression (0, 1) role initialValue
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasInitialValue">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasDimensions
	from frontend.java.NewArray (0, 1)
	to frontend.java.JavaExpression (1, 1) role dimensions
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasDimensions">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasConstructorCall
	from frontend.java.NewObject (0, 1)
	to frontend.java.JavaExpression (1, 1) role javaExpression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasConstructorCall">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasClassbody
	from frontend.java.NewObject (0, 1)
	to frontend.java.ClassType (1, 1) role classBody
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasClassbody">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasOperand
	from frontend.java.Operation (0, 1)
	to frontend.java.JavaExpression (0, *) role operand
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasOperand">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasConstructor
	from frontend.java.Class (1, 1)
	to frontend.java.Constructor (0, *) role constructor
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasConstructor">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasStaticInitBlock
	from frontend.java.Class (1, 1)
	to frontend.java.InitBlock (0, *) role staticInitBlock
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasStaticInitBlock">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.ImplementsInterface
	from frontend.java.Class (1, 1)
	to frontend.java.JavaExpression (0, *) role InterfaceExpression
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.ImplementsInterface">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasLiteral
	from frontend.java.Enumeration (0, 1)
	to frontend.java.JavaExpression (1, *) role literal
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasLiteral">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasInitValue
	from frontend.java.DataObject (0, *)
	to frontend.java.JavaExpression (0, 1) role initValue
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasInitValue">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.DataObjectHasType
	from frontend.java.DataObject (0, *)
	to frontend.java.JavaType (0, 1) role type
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.DataObjectHasType">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasStatement
	from frontend.java.LabelType (0, 1)
	to frontend.java.JavaStatement (1, 1) role labelStatement
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasStatement">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--AggregationClass frontend.java.HasNamedType
	from frontend.java.TypeReference (0, 1)
	to frontend.java.JavaExpression (1, 1) role namedType
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasNamedType">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasBasicStaticImport
	from frontend.java.StaticImportStatement (0, 1)
	to frontend.java.JavaExpression (0, 1) role basicStaticImport
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasBasicStaticImport">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.HasStaticImport
	from frontend.java.StaticImportStatement (0, 1)
	to frontend.java.DataObject (1, 1) role staticImport
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.HasStaticImport">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--CompositionClass frontend.java.ContainsJavaFile
	from frontend.java.JarFile (0, 1)
	to frontend.java.JavaFile (0, *) role javaFile
	aggregate from;-->
 	<xsd:complexType name="ET_frontend.java.ContainsJavaFile">
 	 	<xsd:complexContent>
 	 	 	<xsd:extension base="smg:BT_Edge"/>
 	 	</xsd:complexContent>
 	</xsd:complexType>
 	<!--Enumeration-types-->
 	<xsd:simpleType name="ST_ENUM_frontend.java.BaseType">
 	 	<xsd:restriction base="xsd:string">
 	 	 	<xsd:enumeration value="NOTYPE"/>
 	 	 	<xsd:enumeration value="BOOLEAN"/>
 	 	 	<xsd:enumeration value="CHAR"/>
 	 	 	<xsd:enumeration value="BYTE"/>
 	 	 	<xsd:enumeration value="SHORT"/>
 	 	 	<xsd:enumeration value="INT"/>
 	 	 	<xsd:enumeration value="FLOAT"/>
 	 	 	<xsd:enumeration value="DOUBLE"/>
 	 	 	<xsd:enumeration value="LABEL"/>
 	 	 	<xsd:enumeration value="REFERENCE"/>
 	 	 	<xsd:enumeration value="UNKNOWN"/>
 	 	 	<xsd:enumeration value="CONSTRUCTOR"/>
 	 	 	<xsd:enumeration value="NULL"/>
 	 	 	<xsd:enumeration value="ILLEGAL"/>
 	 	 	<xsd:enumeration value="n"/>
 	 	</xsd:restriction>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_ENUM_frontend.java.Options">
 	 	<xsd:restriction base="xsd:string">
 	 	 	<xsd:enumeration value="CLASS_STATIC_INITIALIZER"/>
 	 	 	<xsd:enumeration value="METHOD_BODY"/>
 	 	 	<xsd:enumeration value="INNER_METHOD_BLOCK"/>
 	 	 	<xsd:enumeration value="TRY_BLOCK"/>
 	 	 	<xsd:enumeration value="CATCH_BLOCK"/>
 	 	 	<xsd:enumeration value="FINALLY_BLOCK"/>
 	 	 	<xsd:enumeration value="UNKNOWN_BLOCK"/>
 	 	 	<xsd:enumeration value="UNKNOWN_TYPE_INTERFACE"/>
 	 	 	<xsd:enumeration value="UNKNOWN_TYPE_METHOD"/>
 	 	 	<xsd:enumeration value="UNKNOWN_TYPE_VARIABLE"/>
 	 	 	<xsd:enumeration value="UNKNOWN_TYPE_EXPRESSION"/>
 	 	 	<xsd:enumeration value="TYPE_STRING_TYPE"/>
 	 	 	<xsd:enumeration value="CONSTRUCTOR"/>
 	 	 	<xsd:enumeration value="INTERFACE"/>
 	 	 	<xsd:enumeration value="METHOD_PARAMETER"/>
 	 	 	<xsd:enumeration value="RESERVED_NAME"/>
 	 	 	<xsd:enumeration value="TEMPORARY_TYPE"/>
 	 	 	<xsd:enumeration value="CLASS_FROM_TYPE"/>
 	 	 	<xsd:enumeration value="QUALIFIED_THIS"/>
 	 	 	<xsd:enumeration value="QUALIFIED_CLASS"/>
 	 	 	<xsd:enumeration value="QUALIFIED_SUPER"/>
 	 	 	<xsd:enumeration value="THIS_CONSTRUCTOR_CALL"/>
 	 	 	<xsd:enumeration value="IMPLICIT_SUPER_CALL"/>
 	 	 	<xsd:enumeration value="CHECK_TYPE_OBJECT"/>
 	 	 	<xsd:enumeration value="ARRAY_LENGTH"/>
 	 	 	<xsd:enumeration value="REDEFINED_OBJECT"/>
 	 	 	<xsd:enumeration value="DEFINED_IN_CLASS"/>
 	 	 	<xsd:enumeration value="DEFINED_IN_METHOD"/>
 	 	 	<xsd:enumeration value="DEFINED_IN_OTHER"/>
 	 	 	<xsd:enumeration value="IMPORT_STATEMENT_IS_RESOLVED"/>
 	 	 	<xsd:enumeration value="VALUES_METHOD"/>
 	 	 	<xsd:enumeration value="n"/>
 	 	</xsd:restriction>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_ENUM_frontend.common.TokenVisibility">
 	 	<xsd:restriction base="xsd:string">
 	 	 	<xsd:enumeration value="GRAMMAR"/>
 	 	 	<xsd:enumeration value="COMMENT"/>
 	 	 	<xsd:enumeration value="HIDDEN"/>
 	 	 	<xsd:enumeration value="ARTIFICIAL"/>
 	 	 	<xsd:enumeration value="n"/>
 	 	</xsd:restriction>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_RECORD_frontend.java.JavaTokenPosition">
 	 	<!-- alphabetically ordered: fromColumn:ST_INTEGER fromLine:ST_INTEGER length:ST_INTEGER offset:ST_INTEGER toColumn:ST_INTEGER toLine:ST_INTEGER -->
 	 	<xsd:restriction base="xsd:string">
 	 	</xsd:restriction>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_ENUM_frontend.java.TokenType">
 	 	<xsd:restriction base="xsd:string">
 	 	 	<xsd:enumeration value="COMMENT"/>
 	 	 	<xsd:enumeration value="..."/>
 	 	 	<xsd:enumeration value="ANNOTATION"/>
 	 	 	<xsd:enumeration value="ERROR"/>
 	 	 	<xsd:enumeration value="ILLEGAL"/>
 	 	 	<xsd:enumeration value="n"/>
 	 	</xsd:restriction>
 	</xsd:simpleType>
 	<xsd:simpleType name="ST_ENUM_frontend.java.Modifier">
 	 	<xsd:restriction base="xsd:string">
 	 	 	<xsd:enumeration value="NOMODIFIER"/>
 	 	 	<xsd:enumeration value="ABSTRACT"/>
 	 	 	<xsd:enumeration value="FINAL"/>
 	 	 	<xsd:enumeration value="NATIVE"/>
 	 	 	<xsd:enumeration value="PRIVATE"/>
 	 	 	<xsd:enumeration value="PROTECTED"/>
 	 	 	<xsd:enumeration value="PUBLIC"/>
 	 	 	<xsd:enumeration value="STRICT"/>
 	 	 	<xsd:enumeration value="STATIC"/>
 	 	 	<xsd:enumeration value="SYNCHRONIZED"/>
 	 	 	<xsd:enumeration value="TRANSIENT"/>
 	 	 	<xsd:enumeration value="VOLATILE"/>
 	 	 	<xsd:enumeration value="ENUM"/>
 	 	 	<xsd:enumeration value="ILLEGAL"/>
 	 	 	<xsd:enumeration value="n"/>
 	 	</xsd:restriction>
 	</xsd:simpleType>
</xsd:schema>