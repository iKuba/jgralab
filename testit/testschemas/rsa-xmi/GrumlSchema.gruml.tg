// JGraLab - The Java graph laboratory
//   Version : Carnotaurus
//   Revision: 1107
//   Build ID: 65

Schema de.uni_koblenz.jgralab.grumlschema.GrumlSchema;
GraphClass SchemaGraph ["There must be exactly one GraphClass." "count(V{structure.GraphClass}) = 1" "V{structure.GraphClass}"] ["The GraphClass may not be abstract." "forall gc: V{structure.GraphClass} @ not gc.isAbstract" "from gc: V{structure.GraphClass} with gc.isAbstract reportSet gc end"];
Package domains;
VertexClass BooleanDomain: Domain;
abstract VertexClass CollectionDomain: Domain;
abstract VertexClass CompositeDomain: Domain;
abstract VertexClass Domain { qualifiedName: String };
VertexClass DoubleDomain: Domain;
VertexClass EnumDomain: Domain { enumConstants: List<String> };
VertexClass IntDomain: Domain;
VertexClass ListDomain: CollectionDomain;
VertexClass LongDomain: Domain;
VertexClass MapDomain: Domain ["The key domain of a MapDomain must not be a collection, record, or map" "forall m: V{domains.MapDomain} @ (forall d: m -->{domains.HasKeyDomain} @ not hasType{domains.CollectionDomain, domains.RecordDomain, domains.MapDomain}(d))"];
VertexClass RecordDomain: Domain;
VertexClass SetDomain: CollectionDomain;
VertexClass StringDomain: Domain;
EdgeClass HasBaseDomain from CollectionDomain (0,*) to Domain (1,1);
EdgeClass HasKeyDomain from MapDomain (0,*) to Domain (1,1);
AggregationClass HasRecordDomainComponent from RecordDomain (0,*) to Domain (1,*) aggregate from { name: String };
EdgeClass HasValueDomain from MapDomain (0,*) to Domain (1,1);
Package structure;
VertexClass AggregationClass: EdgeClass { aggregateFrom: Boolean };
VertexClass Attribute { name: String };
abstract VertexClass AttributedElementClass { isAbstract: Boolean,  qualifiedName: String };
VertexClass CompositionClass: AggregationClass;
VertexClass Constraint { message: String,  offendingElementsQuery: String,  predicateQuery: String };
VertexClass EdgeClass: GraphElementClass;
VertexClass GraphClass: AttributedElementClass;
abstract VertexClass GraphElementClass: AttributedElementClass;
VertexClass Package { qualifiedName: String } ["A Package must either be default or subpackage, but not both" "forall p: V{structure.Package} @ inDegree{structure.ContainsDefaultPackage}(p) + inDegree{structure.ContainsSubPackage}(p) = 1"];
VertexClass Schema { name: String,  packagePrefix: String };
VertexClass VertexClass: GraphElementClass;
CompositionClass ContainsDefaultPackage from Schema (0,1) to Package (1,1) aggregate from;
CompositionClass ContainsDomain from Package (1,1) to domains.Domain (0,*) aggregate from;
CompositionClass ContainsGraphElementClass from Package (1,1) to GraphElementClass (0,*) aggregate from;
CompositionClass ContainsSubPackage from Package (0,1) to Package (0,*) aggregate from;
CompositionClass DefinesGraphClass from Schema (1,1) to GraphClass (1,1) aggregate from;
AggregationClass From from EdgeClass (0,*) to VertexClass (1,1) aggregate from { max: Integer,  min: Integer,  redefinedRoles: Set<String>,  roleName: String };
CompositionClass HasAttribute from AttributedElementClass (1,1) to Attribute (0,*) aggregate from;
CompositionClass HasConstraint from AttributedElementClass (1,1) to Constraint (0,*) aggregate from;
EdgeClass HasDomain from Attribute (0,*) to domains.Domain (1,1);
EdgeClass SpecializesEdgeClass from EdgeClass (0,*) to EdgeClass (0,*);
EdgeClass SpecializesVertexClass from VertexClass (0,*) to VertexClass (0,*);
AggregationClass To from EdgeClass (0,*) to VertexClass (1,1) aggregate from { max: Integer,  min: Integer,  redefinedRoles: Set<String>,  roleName: String };

Graph "8c742673-1e4e09d6-4a6c089f-209f63a9_581" SchemaGraph (1000 1000 72 141);
Package structure;
1 Schema <1 2> "GrumlSchema" "de.uni_koblenz.jgralab.grumlschema";
2 GraphClass <-1> f "SchemaGraph";
3 Package <-2 4 6 7 30 56 91> "";
Package domains;
5 SetDomain <5 -6 -137 -138> "Set<String>";
6 StringDomain <-4 -5 -11 -13 -16 -23 -25 -27 -33 -36 -61 -71 -102 -119> "String";
Package structure;
7 Package <-7 8 9 14 17 18 19 20 21 28 34 37 40 43 46 49 52 63 73 76 79 82 85 88> "structure";
8 VertexClass <-8 -54 -65 -89 -90 129> f "structure.VertexClass";
9 VertexClass <-9 10 12 -83 -86> f "structure.Schema";
10 Attribute <-10 11> "name";
11 Attribute <-12 13> "packagePrefix";
12 VertexClass <-14 15 -75 -74 -77 -80 -84 140> f "structure.Package";
13 Attribute <-15 16> "qualifiedName";
14 VertexClass <-17 -51 -50 -53 -64 -128 132> f "structure.EdgeClass";
15 VertexClass <-18 -87 133 141 142> f "structure.GraphClass";
16 VertexClass <-19 -81 122 -129 -132> t "structure.GraphElementClass";
17 VertexClass <-20 123> f "structure.CompositionClass";
18 VertexClass <-21 22 24 26 -45> f "structure.Constraint";
19 Attribute <-22 23> "message";
20 Attribute <-24 25> "predicateQuery";
21 Attribute <-26 27> "offendingElementsQuery";
22 VertexClass <-28 29 32 -44 -47 -122 -133> t "structure.AttributedElementClass";
23 Attribute <-29 31> "isAbstract";
Package domains;
24 BooleanDomain <-30 -31 -39> "Boolean";
Package structure;
25 Attribute <-32 33> "qualifiedName";
26 VertexClass <-34 35 -41 -48> f "structure.Attribute";
27 Attribute <-35 36> "name";
28 VertexClass <-37 38 -123 128> f "structure.AggregationClass";
29 Attribute <-38 39> "aggregateFrom";
30 EdgeClass <-40 41 42> f "structure.HasDomain";
32 VertexClass <-42 -78 -100 101 -108 -111 -114 -117 -120 -124 -125 -126 -127 -130 -131 -134 -135> t "domains.Domain";
33 CompositionClass <-43 44 45> t f "structure.HasConstraint";
36 CompositionClass <-46 47 48> t f "structure.HasAttribute";
31 EdgeClass <-49 50 51> f "structure.SpecializesEdgeClass";
38 Attribute <-55 57> "min";
Package domains;
39 IntDomain <-56 -57 -59 -67 -69> "Integer";
Package structure;
40 Attribute <-58 59> "max";
41 Attribute <-60 61> "roleName";
42 Attribute <-62 137> "redefinedRoles";
43 AggregationClass <-52 53 54 55 58 60 62> t f "structure.To";
44 Attribute <-66 67> "min";
45 Attribute <-68 69> "max";
46 Attribute <-70 71> "roleName";
47 Attribute <-72 138> "redefinedRoles";
48 AggregationClass <-63 64 65 66 68 70 72> t f "structure.From";
49 CompositionClass <-73 74 75> t f "structure.ContainsSubPackage";
35 CompositionClass <-76 77 78> t f "structure.ContainsDomain";
37 CompositionClass <-79 80 81> t f "structure.ContainsGraphElementClass";
50 CompositionClass <-82 83 84> t f "structure.ContainsDefaultPackage";
51 CompositionClass <-85 86 87> t f "structure.DefinesGraphClass";
34 EdgeClass <-88 89 90> f "structure.SpecializesVertexClass";
52 Package <-91 92 93 94 95 96 97 98 99 100 103 104 105 106 109 112 115> "domains";
53 VertexClass <-92 121> f "domains.SetDomain";
54 VertexClass <-93 124> f "domains.StringDomain";
55 VertexClass <-94 -116 130> f "domains.RecordDomain";
56 VertexClass <-95 127> f "domains.IntDomain";
57 VertexClass <-96 136> f "domains.ListDomain";
58 VertexClass <-97 125> f "domains.LongDomain";
59 VertexClass <-98 -110 -113 135 139> f "domains.MapDomain";
60 VertexClass <-99 131> f "domains.EnumDomain";
61 Attribute <-101 102> "qualifiedName";
62 VertexClass <-103 126> f "domains.DoubleDomain";
63 VertexClass <-104 120> f "domains.BooleanDomain";
64 VertexClass <-105 -107 -121 134 -136> t "domains.CollectionDomain";
65 EdgeClass <-106 107 108> f "domains.HasBaseDomain";
66 EdgeClass <-109 110 111> f "domains.HasValueDomain";
67 EdgeClass <-112 113 114> f "domains.HasKeyDomain";
71 Attribute <-118 119> "name";
72 AggregationClass <-115 116 117 118> t f "domains.HasRecordDomainComponent";
68 Constraint <-139> "The key domain of a MapDomain must not be a collection, record, or map" \null "forall m: V{MapDomain} @ (forall d: m -->{HasKeyDomain} @ not hasClass{CollectionDomain,RecordDomain,MapDomain}(d))";
69 Constraint <-140> "A Package must either be default or subpackage, but not both" \null "forall p: V{Package} @ degree{ContainsDefaultPackage}(p) + degree{ContainsSubPackage}(p) = 1";
70 Constraint <-141> "The GraphClass may not be abstract." "from gc: V{GraphClass} with gc.isAbstract reportSet gc end" "forall gc: V{GraphClass} @ not gc.isAbstract";
73 Constraint <-142> "There must be exactly one GraphClass." "V{GraphClass}" "count(V{GraphClass}) = 1";
1 DefinesGraphClass;
2 ContainsDefaultPackage;
4 ContainsDomain;
Package domains;
5 HasBaseDomain;
Package structure;
6 ContainsDomain;
7 ContainsSubPackage;
8 ContainsGraphElementClass;
9 ContainsGraphElementClass;
10 HasAttribute;
11 HasDomain;
12 HasAttribute;
13 HasDomain;
14 ContainsGraphElementClass;
15 HasAttribute;
16 HasDomain;
17 ContainsGraphElementClass;
18 ContainsGraphElementClass;
19 ContainsGraphElementClass;
20 ContainsGraphElementClass;
21 ContainsGraphElementClass;
22 HasAttribute;
23 HasDomain;
24 HasAttribute;
25 HasDomain;
26 HasAttribute;
27 HasDomain;
28 ContainsGraphElementClass;
29 HasAttribute;
30 ContainsDomain;
31 HasDomain;
32 HasAttribute;
33 HasDomain;
34 ContainsGraphElementClass;
35 HasAttribute;
36 HasDomain;
37 ContainsGraphElementClass;
38 HasAttribute;
39 HasDomain;
40 ContainsGraphElementClass;
41 From 2147483647 0 \null "";
42 To 1 1 \null "";
43 ContainsGraphElementClass;
44 From 1 1 \null "";
45 To 2147483647 0 \null "";
46 ContainsGraphElementClass;
47 From 1 1 \null "";
48 To 2147483647 0 \null "";
49 ContainsGraphElementClass;
50 From 2147483647 0 \null "";
51 To 2147483647 0 \null "";
52 ContainsGraphElementClass;
53 From 2147483647 0 \null "";
54 To 1 1 \null "";
55 HasAttribute;
56 ContainsDomain;
57 HasDomain;
58 HasAttribute;
59 HasDomain;
60 HasAttribute;
61 HasDomain;
62 HasAttribute;
63 ContainsGraphElementClass;
64 From 2147483647 0 \null "";
65 To 1 1 \null "";
66 HasAttribute;
67 HasDomain;
68 HasAttribute;
69 HasDomain;
70 HasAttribute;
71 HasDomain;
72 HasAttribute;
73 ContainsGraphElementClass;
74 From 1 0 \null "";
75 To 2147483647 0 \null "";
76 ContainsGraphElementClass;
77 From 1 1 \null "";
78 To 2147483647 0 \null "";
79 ContainsGraphElementClass;
80 From 1 1 \null "";
81 To 2147483647 0 \null "";
82 ContainsGraphElementClass;
83 From 1 0 \null "";
84 To 1 1 \null "";
85 ContainsGraphElementClass;
86 From 1 1 \null "";
87 To 1 1 \null "";
88 ContainsGraphElementClass;
89 From 2147483647 0 \null "";
90 To 2147483647 0 \null "";
91 ContainsSubPackage;
92 ContainsGraphElementClass;
93 ContainsGraphElementClass;
94 ContainsGraphElementClass;
95 ContainsGraphElementClass;
96 ContainsGraphElementClass;
97 ContainsGraphElementClass;
98 ContainsGraphElementClass;
99 ContainsGraphElementClass;
100 ContainsGraphElementClass;
101 HasAttribute;
102 HasDomain;
103 ContainsGraphElementClass;
104 ContainsGraphElementClass;
105 ContainsGraphElementClass;
106 ContainsGraphElementClass;
107 From 2147483647 0 \null "";
108 To 1 1 \null "";
109 ContainsGraphElementClass;
110 From 2147483647 0 \null "";
111 To 1 1 \null "";
112 ContainsGraphElementClass;
113 From 2147483647 0 \null "";
114 To 1 1 \null "";
115 ContainsGraphElementClass;
116 From 2147483647 0 \null "";
117 To 2147483647 1 \null "";
118 HasAttribute;
119 HasDomain;
120 SpecializesVertexClass;
121 SpecializesVertexClass;
122 SpecializesVertexClass;
123 SpecializesVertexClass;
124 SpecializesVertexClass;
125 SpecializesVertexClass;
126 SpecializesVertexClass;
127 SpecializesVertexClass;
128 SpecializesVertexClass;
129 SpecializesVertexClass;
130 SpecializesVertexClass;
131 SpecializesVertexClass;
132 SpecializesVertexClass;
133 SpecializesVertexClass;
134 SpecializesVertexClass;
135 SpecializesVertexClass;
136 SpecializesVertexClass;
137 HasDomain;
138 HasDomain;
139 HasConstraint;
140 HasConstraint;
141 HasConstraint;
142 HasConstraint;
