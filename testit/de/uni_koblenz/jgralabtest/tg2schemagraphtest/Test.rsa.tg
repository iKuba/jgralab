Schema test.Test;
GraphClass GC { lastUpdate: util.Date, boundary: .Polygon } ["Nur ein Test"  "true"  ];
 
Package ;
RecordDomain Position (lon: Double, lat: Double);
RecordDomain Polygon (points: List<Position>, closed: Boolean);
VertexClass A;
VertexClass B;
VertexClass C: A;
VertexClass D: B;
VertexClass E: C;
VertexClass F: D;
EdgeClass Ab from A (1, 1) role a to B (1, 1) role b;
abstract AggregationClass Cd from D (0, *) role d to C (1, 1) role c aggregate to;
CompositionClass Ef from F (1, 1) role f redefines a, c to E (0, *) role e redefines b aggregate from;
 
Package util;
EnumDomain Month (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC);
RecordDomain Date (day: Integer, month: Month, year: Integer);
